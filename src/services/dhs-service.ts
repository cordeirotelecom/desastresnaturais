/**
 * Desenvolvimento Harm√¥nico e Sustent√°vel (DHS)
 * Base filos√≥fica e metodol√≥gica para todas as a√ß√µes do sistema
 * 
 * Fundamenta√ß√£o:
 * - Pensamento Sist√™mico e Complexo
 * - Converg√™ncia dos 3 Setores
 * - Impactos Proporcionais nos Eixos da Sustentabilidade
 */

// ==================== INTERFACES E TIPOS ====================

export interface NecessidadeHumana {
  id: string;
  categoria: 'fisiologica' | 'psicologica' | 'autorrealizacao';
  tipo: string;
  descricao: string;
  prioridade: 'critica' | 'alta' | 'media' | 'baixa';
  atendida: boolean;
  percentualAtendimento?: number;
}

export interface EixoSustentabilidade {
  id: string;
  tipo: 'economico' | 'social' | 'ambiental';
  nome: string;
  descricao: string;
  indicadores: IndicadorDHS[];
  impacto: number; // 0-100
  proporcionalidade: number; // 0-100
}

export interface SetorAtuante {
  id: string;
  tipo: 'publico' | 'privado' | 'sociedade-civil' | 'comunidade';
  nome: string;
  representantes: string[];
  contribuicoes: Contribuicao[];
  nivelConvergencia: number; // 0-100
}

export interface Contribuicao {
  id: string;
  setorId: string;
  tipo: 'recurso' | 'conhecimento' | 'infraestrutura' | 'mobilizacao';
  descricao: string;
  valor?: number;
  dataContribuicao: Date;
}

export interface IndicadorDHS {
  id: string;
  nome: string;
  descricao: string;
  valorAtual: number;
  valorMeta: number;
  unidade: string;
  tendencia: 'crescente' | 'estavel' | 'decrescente';
  dataAtualizacao: Date;
}

export interface AtuacaoResolutiva {
  id: string;
  nome: string;
  descricao: string;
  problema: string;
  solucao: string;
  setoresEnvolvidos: string[];
  necessidadesAtendidas: string[];
  impactosEixos: {
    economico: number;
    social: number;
    ambiental: number;
  };
  status: 'planejada' | 'em-andamento' | 'concluida' | 'suspensa';
  resultados?: string[];
}

export interface MatrizConvergencia {
  id: string;
  nome: string;
  objetivo: string;
  setoresParticipantes: SetorAtuante[];
  acoes: AtuacaoResolutiva[];
  indicadorConvergencia: number; // 0-100
  dataInicio: Date;
  dataFim?: Date;
  status: 'ativa' | 'concluida' | 'pausada';
}

export interface AbordagemSistemica {
  tipo: 'multidisciplinar' | 'interdisciplinar' | 'transdisciplinar';
  nome: string;
  descricao: string;
  analogia: string;
  nivelEficacia: number; // 0-100
  caracteristicas: string[];
}

export interface FocoPrioritario {
  id: string;
  nome: string;
  descricao: string;
  relevanciaFamilia: boolean;
  necessidadesAssociadas: NecessidadeHumana[];
  setoresEnvolvidos: string[];
  prazo: string;
  prioridade: 'critica' | 'alta' | 'media' | 'baixa';
}

export interface ResultadoDHS {
  tipo: 'melhora-relacoes' | 'liberdade-consciencia' | 'paz-interna' | 'paz-externa';
  descricao: string;
  indicadores: IndicadorDHS[];
  alcancado: boolean;
}

// ==================== NECESSIDADES HUMANAS (PIR√ÇMIDE DE MASLOW) ====================

export const NECESSIDADES_FISIOLOGICAS: NecessidadeHumana[] = [
  {
    id: 'nec-fis-001',
    categoria: 'fisiologica',
    tipo: 'Alimenta√ß√£o',
    descricao: 'Fome - Necessidade b√°sica de nutri√ß√£o adequada',
    prioridade: 'critica',
    atendida: false,
  },
  {
    id: 'nec-fis-002',
    categoria: 'fisiologica',
    tipo: 'Descanso',
    descricao: 'Sono - Necessidade de repouso e recupera√ß√£o',
    prioridade: 'critica',
    atendida: false,
  },
  {
    id: 'nec-fis-003',
    categoria: 'fisiologica',
    tipo: 'Sa√∫de',
    descricao: 'Sa√∫de - Necessidade de bem-estar f√≠sico e mental',
    prioridade: 'critica',
    atendida: false,
  },
  {
    id: 'nec-fis-004',
    categoria: 'fisiologica',
    tipo: 'Abrigo',
    descricao: 'Moradia - Necessidade de prote√ß√£o e seguran√ßa f√≠sica',
    prioridade: 'critica',
    atendida: false,
  },
];

export const NECESSIDADES_PSICOLOGICAS: NecessidadeHumana[] = [
  {
    id: 'nec-psi-001',
    categoria: 'psicologica',
    tipo: 'Seguran√ßa',
    descricao: 'Seguran√ßa - Necessidade de prote√ß√£o contra amea√ßas',
    prioridade: 'alta',
    atendida: false,
  },
  {
    id: 'nec-psi-002',
    categoria: 'psicologica',
    tipo: 'Pertencimento',
    descricao: 'Pertencimento - Necessidade de conex√£o social e familiar',
    prioridade: 'alta',
    atendida: false,
  },
  {
    id: 'nec-psi-003',
    categoria: 'psicologica',
    tipo: 'Autoestima',
    descricao: 'Autoestima - Necessidade de reconhecimento e valor pessoal',
    prioridade: 'alta',
    atendida: false,
  },
];

export const NECESSIDADES_AUTORREALIZACAO: NecessidadeHumana[] = [
  {
    id: 'nec-aut-001',
    categoria: 'autorrealizacao',
    tipo: 'Desenvolvimento',
    descricao: 'Desenvolvimento - Necessidade de crescimento pessoal',
    prioridade: 'media',
    atendida: false,
  },
  {
    id: 'nec-aut-002',
    categoria: 'autorrealizacao',
    tipo: 'Potencial',
    descricao: 'Potencial - Necessidade de expressar capacidades',
    prioridade: 'media',
    atendida: false,
  },
  {
    id: 'nec-aut-003',
    categoria: 'autorrealizacao',
    tipo: 'Supera√ß√£o',
    descricao: 'Supera√ß√£o - Necessidade de transcend√™ncia e realiza√ß√£o',
    prioridade: 'media',
    atendida: false,
  },
];

// ==================== EIXOS DA SUSTENTABILIDADE ====================

export const EIXOS_SUSTENTABILIDADE: EixoSustentabilidade[] = [
  {
    id: 'eixo-eco',
    tipo: 'economico',
    nome: 'üí∞ Eixo Econ√¥mico',
    descricao: 'Gera√ß√£o de renda e valor agregado',
    indicadores: [],
    impacto: 0,
    proporcionalidade: 33.33,
  },
  {
    id: 'eixo-soc',
    tipo: 'social',
    nome: 'üë• Eixo Social',
    descricao: 'Sa√∫de, educa√ß√£o, cidadania e seguran√ßa',
    indicadores: [],
    impacto: 0,
    proporcionalidade: 33.33,
  },
  {
    id: 'eixo-amb',
    tipo: 'ambiental',
    nome: 'üå± Eixo Ambiental',
    descricao: 'Equil√≠brio e harmonia com a natureza',
    indicadores: [],
    impacto: 0,
    proporcionalidade: 33.34,
  },
];

// ==================== SETORES ATUANTES ====================

export const SETORES_CONVERGENCIA: SetorAtuante[] = [
  {
    id: 'setor-pub',
    tipo: 'publico',
    nome: 'Setor P√∫blico',
    representantes: ['Governo do Estado', 'Prefeituras', 'Defesa Civil', 'Secretarias'],
    contribuicoes: [],
    nivelConvergencia: 0,
  },
  {
    id: 'setor-priv',
    tipo: 'privado',
    nome: 'Setor Privado',
    representantes: ['Empresas', 'Ind√∫strias', 'Com√©rcio', 'Iniciativa Privada'],
    contribuicoes: [],
    nivelConvergencia: 0,
  },
  {
    id: 'setor-civil',
    tipo: 'sociedade-civil',
    nome: 'Sociedade Civil Organizada',
    representantes: ['ONGs', 'Associa√ß√µes', 'Institutos', 'Cooperativas'],
    contribuicoes: [],
    nivelConvergencia: 0,
  },
  {
    id: 'setor-com',
    tipo: 'comunidade',
    nome: 'Comunidade em Geral',
    representantes: ['Fam√≠lias', 'Cidad√£os', 'Volunt√°rios', 'Grupos Comunit√°rios'],
    contribuicoes: [],
    nivelConvergencia: 0,
  },
];

// ==================== ABORDAGENS SIST√äMICAS ====================

export const ABORDAGENS_SISTEMICAS: AbordagemSistemica[] = [
  {
    tipo: 'multidisciplinar',
    nome: 'üî¥ Abordagem Multidisciplinar',
    descricao: 'Diversos assuntos impactados, mas sem coopera√ß√£o ou interconex√£o',
    analogia: 'Tripulantes remando desordenadamente. O barco anda em c√≠rculos.',
    nivelEficacia: 30,
    caracteristicas: [
      'Trabalho isolado por disciplinas',
      'Falta de comunica√ß√£o entre √°reas',
      'Resultados fragmentados',
      'Baixa sinergia',
    ],
  },
  {
    tipo: 'interdisciplinar',
    nome: 'üü° Abordagem Interdisciplinar',
    descricao: 'Diversos assuntos com coopera√ß√£o e interconex√£o para atingir um objetivo',
    analogia: 'Tripula√ß√£o alinhada como competi√ß√£o de remo. Avan√ßa, mas n√£o est√° preparado para turbul√™ncias.',
    nivelEficacia: 65,
    caracteristicas: [
      'Coopera√ß√£o entre disciplinas',
      'Objetivo comum definido',
      'Comunica√ß√£o regular',
      'Resultados integrados',
    ],
  },
  {
    tipo: 'transdisciplinar',
    nome: 'üü¢ Abordagem Transdisciplinar',
    descricao: 'Assuntos unificados, gerando pensamento complexo/sist√™mico que transpassa disciplinas',
    analogia: 'Tripula√ß√£o percebe miss√£o comum. Remam juntos e o barco vira navio apto a navegar mares bravios.',
    nivelEficacia: 95,
    caracteristicas: [
      'Pensamento sist√™mico e complexo',
      'Unifica√ß√£o de conhecimentos',
      'Resili√™ncia e adaptabilidade',
      'Transforma√ß√£o paradigm√°tica',
      'Resultados sustent√°veis',
    ],
  },
];

// ==================== DEFINI√á√ÉO DO DHS ====================

export const DEFINICAO_DHS = {
  titulo: 'Desenvolvimento Harm√¥nico e Sustent√°vel (DHS)',
  definicao: `O processo evolutivo que busca, a partir de foco(s) priorit√°rio(s) e, no que couber, dando relev√¢ncia √† fam√≠lia, atender necessidades, com impactos proporcionais nos 3 eixos da sustentabilidade (econ√¥mico, social e ambiental), por meio da converg√™ncia dos 3 setores (p√∫blico, privado e sociedade civil organizada) e da comunidade em geral e via promo√ß√£o de atua√ß√µes resolutivas e matrizes de converg√™ncia, gerando a melhora nas rela√ß√µes, a liberdade com a consci√™ncia da unidade e a Paz, interna e externa.`,
  componentesChave: [
    'Atendimento de Necessidades Humanas',
    'Impactos Proporcionais nos Eixos da Sustentabilidade',
    'Converg√™ncia dos Tr√™s Setores e da Comunidade',
    'Relev√¢ncia da Fam√≠lia (art. 226 da CF/88)',
  ],
  resultadosEsperados: [
    'Melhora nas rela√ß√µes',
    'Liberdade com consci√™ncia da unidade',
    'Paz interna',
    'Paz externa',
  ],
};

// ==================== FAM√çLIA COMO BASE ====================

export const RELEVANCIA_FAMILIA = {
  fundamentoLegal: 'Artigo 226 da Constitui√ß√£o Federal de 1988',
  texto: 'A fam√≠lia, base da sociedade, tem especial prote√ß√£o do Estado.',
  importancia: [
    'Ambiente primordial para o desenvolvimento de valores',
    'Base da estrutura social',
    'N√∫cleo de fomento do DHS',
    'Primeiro espa√ßo de educa√ß√£o e forma√ß√£o cidad√£',
  ],
  acoesIntegradas: [
    'Fortalecimento de v√≠nculos familiares',
    'Apoio psicossocial √†s fam√≠lias afetadas',
    'Programas de desenvolvimento familiar',
    'Prote√ß√£o integral da fam√≠lia',
  ],
};

// ==================== SERVI√áO DE GEST√ÉO DHS ====================

export class DHSService {
  /**
   * Obt√©m todas as necessidades humanas categorizadas
   */
  static getNecessidadesHumanas() {
    return {
      fisiologicas: NECESSIDADES_FISIOLOGICAS,
      psicologicas: NECESSIDADES_PSICOLOGICAS,
      autorrealizacao: NECESSIDADES_AUTORREALIZACAO,
      total: [
        ...NECESSIDADES_FISIOLOGICAS,
        ...NECESSIDADES_PSICOLOGICAS,
        ...NECESSIDADES_AUTORREALIZACAO,
      ],
    };
  }

  /**
   * Obt√©m os eixos da sustentabilidade
   */
  static getEixosSustentabilidade(): EixoSustentabilidade[] {
    return EIXOS_SUSTENTABILIDADE;
  }

  /**
   * Obt√©m os setores para converg√™ncia
   */
  static getSetoresConvergencia(): SetorAtuante[] {
    return SETORES_CONVERGENCIA;
  }

  /**
   * Obt√©m as abordagens sist√™micas
   */
  static getAbordagensSistemicas(): AbordagemSistemica[] {
    return ABORDAGENS_SISTEMICAS;
  }

  /**
   * Obt√©m a defini√ß√£o completa do DHS
   */
  static getDefinicaoDHS() {
    return DEFINICAO_DHS;
  }

  /**
   * Obt√©m informa√ß√µes sobre a relev√¢ncia da fam√≠lia
   */
  static getRelevanciaFamilia() {
    return RELEVANCIA_FAMILIA;
  }

  /**
   * Calcula o n√≠vel de converg√™ncia entre setores
   */
  static calcularNivelConvergencia(setores: SetorAtuante[]): number {
    if (setores.length === 0) return 0;
    const soma = setores.reduce((acc, setor) => acc + setor.nivelConvergencia, 0);
    return soma / setores.length;
  }

  /**
   * Verifica proporcionalidade dos impactos nos eixos
   */
  static verificarProporcionalidade(impactos: {
    economico: number;
    social: number;
    ambiental: number;
  }): boolean {
    const valores = [impactos.economico, impactos.social, impactos.ambiental];
    const media = valores.reduce((a, b) => a + b, 0) / 3;
    const desvio = Math.max(...valores) - Math.min(...valores);
    
    // Considera proporcional se o desvio for menor que 20% da m√©dia
    return desvio <= media * 0.2;
  }

  /**
   * Avalia a√ß√£o segundo princ√≠pios DHS
   */
  static avaliarAcaoDHS(acao: AtuacaoResolutiva): {
    conformeDHS: boolean;
    pontuacao: number;
    aspectos: {
      atendimentoNecessidades: number;
      proporcionalidadeEixos: number;
      convergenciaSetores: number;
      potencialTransformador: number;
    };
    recomendacoes: string[];
  } {
    const aspectos = {
      atendimentoNecessidades: (acao.necessidadesAtendidas.length / 11) * 100,
      proporcionalidadeEixos: this.verificarProporcionalidade(acao.impactosEixos) ? 100 : 50,
      convergenciaSetores: (acao.setoresEnvolvidos.length / 4) * 100,
      potencialTransformador: 
        acao.status === 'concluida' && acao.resultados && acao.resultados.length > 0 ? 100 : 50,
    };

    const pontuacao =
      (aspectos.atendimentoNecessidades * 0.3 +
        aspectos.proporcionalidadeEixos * 0.3 +
        aspectos.convergenciaSetores * 0.25 +
        aspectos.potencialTransformador * 0.15);

    const recomendacoes: string[] = [];
    
    if (aspectos.atendimentoNecessidades < 50) {
      recomendacoes.push('Ampliar foco no atendimento de necessidades humanas b√°sicas');
    }
    if (aspectos.proporcionalidadeEixos < 80) {
      recomendacoes.push('Equilibrar impactos nos tr√™s eixos da sustentabilidade');
    }
    if (aspectos.convergenciaSetores < 75) {
      recomendacoes.push('Aumentar participa√ß√£o dos setores p√∫blico, privado e sociedade civil');
    }
    if (aspectos.potencialTransformador < 70) {
      recomendacoes.push('Fortalecer atua√ß√£o resolutiva com resultados mensur√°veis');
    }

    return {
      conformeDHS: pontuacao >= 70,
      pontuacao,
      aspectos,
      recomendacoes,
    };
  }

  /**
   * Gera relat√≥rio de an√°lise DHS
   */
  static gerarRelatorioDHS(acoes: AtuacaoResolutiva[]) {
    const avaliacoes = acoes.map(acao => ({
      acao: acao.nome,
      avaliacao: this.avaliarAcaoDHS(acao),
    }));

    const mediaGeral =
      avaliacoes.reduce((acc, av) => acc + av.avaliacao.pontuacao, 0) / avaliacoes.length;

    const acoesConformes = avaliacoes.filter(av => av.avaliacao.conformeDHS).length;

    return {
      dataGeracao: new Date(),
      totalAcoes: acoes.length,
      acoesConformesDHS: acoesConformes,
      percentualConformidade: (acoesConformes / acoes.length) * 100,
      pontuacaoMedia: mediaGeral,
      avaliacoes,
      classificacao:
        mediaGeral >= 90
          ? 'Excelente - Plenamente conforme DHS'
          : mediaGeral >= 70
          ? 'Bom - Conforme DHS com melhorias poss√≠veis'
          : mediaGeral >= 50
          ? 'Regular - Necessita ajustes para conformidade DHS'
          : 'Insuficiente - Requer reestrutura√ß√£o sob perspectiva DHS',
    };
  }
}

export default DHSService;
